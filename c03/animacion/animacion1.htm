<!DOCTYPE html>
<html>

<head>
    <title>Primera Escena con Three.js</title>
    <!--<script type="text/javascript" src="three.js"></script> se tiene que llamar a la libreria --> 
    <!--<script type="text/javascript" src="jquery-1.9.0.js"></script> -->
    <style>
        body{
            /* configurar margin a 0 y overflow a hidden, para ocupar pantalla completa */
            margin: 0;
            overfLow: hidden;
        }
    </style>
</head>

<body> 

<!-- Div que contendre la salida -->
<div id="WebGL-salida">
</div> 
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>//llama a la libreria three.js
<script
  src="https://code.jquery.com/jquery-1.9.0.min.js"
  integrity="sha256-f6DVw/U4x2+HjgEqw5BZf67Kq/5vudRZuRkljnbF344="
  crossorigin="anonymous"></script>//llama a la libreria jquery
<!-- Codigo Javascript que ejecuta nuestros ejemplos Three.js -->
<script> 

    // una vez que todo ha sido cargado, ejecutamos nuestro contenido Three.js.
    $(function () {

        // creamos una scene, que contendrá todos nuestros elementos, como objetos, cámaras y luces
        var scene = new THREE.Scene();
       // var scene THREE.Scene(); faltaba el igual y el new

        // creamos una camera, que define desde donde vamos a mirar.
        var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000); 

        // creamos un render y configuramos el tamaño
        var renderer = new THREE.WebGLRenderer();

        //renderer.setClearColorHex(OxEEEEEE);
        renderer.setSize(window.innerWidth, window.innerHeight);

        var axes = new THREE.AxisHelper( 20 );
        scene.add(axes);

        // creamos el plano del suelo
        var planeGeometry = new THREE.PlaneGeometry(60,20);
        var planeMaterial = new THREE.MeshBasicMaterial({color: 0xcccccc});
       // var planeMaterial = new THREE.MeshBasicMaterial({color: excccccc}); en vez de la e va un 0
        var plane = new THREE.Mesh(planeGeometry,planeMaterial);


        // rotamos y posicionamos el plano
        plane.rotation.x=-0.5*Math.PI;
//        plane.rotation.x=-0.5*Moth.PI; no es moth es math
        plane.position.x=15
        plane.position.y=0
        plane.position.z=0

        // añadimos el plano a la escena
        scene.add(plane);

        // creamos un cubo
        var cubeGeometry = new THREE.BoxGeometry(4,4,4);
       // var cubeGeometry = new THREE.CubeGeometry(4,4,4); no es CubeGeometry es BoxGeometry
        var cubeMaterial = new THREE.MeshBasicMaterial({color: 0xff0000, wireframe: true});
        //var cubeMaterial = new THREE.MesheasicMaterial((color: 0xff0000, wireframe: true));. los parentesis no van, van corchetes, y no es heasic es Basic
        var cube = new THREE.Mesh(cubeGeometry, cubeMaterial);

        // posicionamos el cubo
        cube.position.x=-4;
        cube.position.y=3;
        cube.position.z=0; 

        // añadimos el cubo a la escena
        scene.add(cube);

        // creamos una esfera
        var sphereGeometry = new THREE.SphereGeometry(4,20,20);
        var sphereMaterial = new THREE.MeshBasicMaterial({color: 0x7777ff, wireframe: true});
        var sphere = new THREE.Mesh(sphereGeometry,sphereMaterial);
        //var sphere = THREE.Mesh(sphereGeometry,sphereMaterial); falta el new

        // posicionamos la esfera
        sphere.position.x=20;
        sphere.position.y=4;
        sphere.position.z=2;

        // añadimos la esfera a la escena
        scene.add(sphere); 

        // posiciona y apunta la camara al centro de la escena
        camera.position.x = -30;
        camera.position.y = 40;
        camera.position.z = 30;
        camera.lookAt(scene.position);

        // añadir la salida de la renderizacion al elemento html
        $("#WebGL-salida").append(renderer.domElement); 

        // renderizar la escena
        renderer.render(scene, camera); 
    });


    </script>
    </body>
    </html>